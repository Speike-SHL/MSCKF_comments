.TH "msckf_vio::MsckfVioNodelet" 3 "2024年 五月 9日 星期四" "S-MSCKF注释" \" -*- nroff -*-
.ad l
.nh
.SH NAME
msckf_vio::MsckfVioNodelet
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <msckf_vio_nodelet\&.h>\fP
.PP
继承自 Nodelet \&.
.SS "Public 成员函数"

.in +1c
.ti -1c
.RI "\fBMsckfVioNodelet\fP ()"
.br
.ti -1c
.RI "\fB~MsckfVioNodelet\fP ()"
.br
.in -1c
.SS "Private 成员函数"

.in +1c
.ti -1c
.RI "virtual void \fBonInit\fP ()"
.br
.RI "创建后端节点并初始化MsckfVio类 "
.in -1c
.SS "Private 属性"

.in +1c
.ti -1c
.RI "\fBMsckfVioPtr\fP \fBmsckf_vio_ptr\fP"
.br
.in -1c
.SH "构造及析构函数说明"
.PP 
.SS "msckf_vio::MsckfVioNodelet::MsckfVioNodelet ()\fC [inline]\fP"

.SS "msckf_vio::MsckfVioNodelet::~MsckfVioNodelet ()\fC [inline]\fP"

.SH "成员函数说明"
.PP 
.SS "void msckf_vio::MsckfVioNodelet::onInit ()\fC [private]\fP, \fC [virtual]\fP"

.PP
创建后端节点并初始化MsckfVio类 
.PP
\fB参见\fP
.RS 4
\fBMsckfVio::MsckfVio(ros::NodeHandle &pnh)\fP 
.PP
\fBMsckfVio::initialize()\fP 
.RE
.PP

.SH "类成员变量说明"
.PP 
.SS "\fBMsckfVioPtr\fP msckf_vio::MsckfVioNodelet::msckf_vio_ptr\fC [private]\fP"


.SH "作者"
.PP 
由 Doyxgen 通过分析 S-MSCKF注释 的 源代码自动生成\&.
